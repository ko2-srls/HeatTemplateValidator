heat_template_version: 2013-05-23

parameters:
  key_name:
    type: string
    description: Name of keypair to assign to servers
  flavor:
    type: string
    description: Flavor to use for servers
  private_net_id:
    type: string
    description: ID of private network into which servers get deployed
  private_subnet_id:
    type: string
    description: ID of private sub network into which servers get deployed
  volume_0_image:
    constraints:
    - custom_constraint: glance.image
    default: cca7955f-ad68-442e-907b-5335ab427f52
    description: Image to create volume volume_0 from
    type: string
  volume_0_volume_type:
    default: lvmdriver-1
    description: Volume type for volume volume_0
    type: string
resources:
  server1:
    type: OS::Nova::Server
    properties:
      name: HOT-Validator
      block_device_mapping_v2:
      - device_name: /dev/vda
        volume_id:
          get_resource: volume_0
      config_drive: 'True'
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: server1_port }
      user_data_format: RAW
      user_data: |
          #!/bin/bash
          HOSTNAME=$(hostname)
          NIC=$(ip route | grep default | sed -e "s/^.*dev.//" -e "s/.proto.*//")
          IP=$(ip addr | grep inet | grep eth0 | grep -v secondary | awk '{ print $2 }' | awk -F'/' '{ print $1 }')
          echo "$IP $HOSTNAME" >> /etc/hosts
          apt-get update
          git clone https://git.openstack.org/openstack-dev/devstack
          ./devstack/tools/create-stack-user.sh
          echo "START stack USER"
          cd /opt/stack
          touch start.sh
          echo \#\!\/bin\/sh > /opt/stack/start.sh
          echo "cd /opt/stack" >> /opt/stack/start.sh
          echo "git clone https://git.openstack.org/openstack-dev/devstack" >> /opt/stack/start.sh
          echo "cd ./devstack" >> /opt/stack/start.sh
          echo "echo '[[local|localrc]]' > local.conf" >> /opt/stack/start.sh
          echo "echo HOST_IP=$IP >> local.conf" >> /opt/stack/start.sh
          echo "echo FLAT_INTERFACE=$NIC >> local.conf" >> /opt/stack/start.sh
          echo "echo DATABASE_PASSWORD=password >> local.conf" >> /opt/stack/start.sh
          echo "echo RABBIT_PASSWORD=password >> local.conf" >> /opt/stack/start.sh
          echo "echo SERVICE_PASSWORD=password >> local.conf" >> /opt/stack/start.sh
          echo "echo SERVICE_TOKEN=password >> local.conf" >> /opt/stack/start.sh
          echo "echo ADMIN_PASSWORD=password >> local.conf" >> /opt/stack/start.sh
          echo "echo RECLONE=True >> local.conf" >> /opt/stack/start.sh
          echo "echo enable_plugin neutron https://git.openstack.org/openstack/neutron >> local.conf" >> /opt/stack/start.sh
          echo "echo enable_plugin heat https://opendev.org/openstack/heat >> local.conf" >> /opt/stack/start.sh
          echo "echo enable_plugin heat-dashboard https://git.openstack.org/openstack/heat-dashboard >> local.conf" >> /opt/stack/start.sh
          echo "echo ENABLED_SERVICES=rabbit,mysql,key >> local.conf" >> /opt/stack/start.sh
          echo "echo ENABLED_SERVICES+=,g-api,g-reg >> local.conf" >> /opt/stack/start.sh
          echo "echo ENABLED_SERVICES+=,n-cpu,n-api,n-crt,n-obj,n-cond,n-sch,n-novnc,n-cauth >> local.conf" >> /opt/stack/start.sh
          echo "echo ENABLED_SERVICES+=,neutron,q-svc,q-agt,q-dhcp,q-meta,q-l3 >> local.conf" >> /opt/stack/start.sh
          echo "echo ENABLED_SERVICES+=,cinder,c-sch,c-api,c-vol >> local.conf" >> /opt/stack/start.sh
          echo "echo ENABLED_SERVICES+=,horizon,h-eng,h-api,h-api-cfn,h-api-cw,heat-dashboard >> local.conf" >> /opt/stack/start.sh
          echo "echo enable_plugin ceilometer https://git.openstack.org/openstack/ceilometer >> local.conf" >> /opt/stack/start.sh
          echo "echo enable_plugin aodh https://git.openstack.org/openstack/aodh >> local.conf" >> /opt/stack/start.sh
          echo "echo CINDER_LVM_TYPE=thin >> local.conf" >> /opt/stack/start.sh
          echo "echo CINDER_VOLUME_CLEAR=none >> local.conf" >> /opt/stack/start.sh
          echo "echo VOLUME_BACKING_FILE_SIZE=2G >> local.conf" >> /opt/stack/start.sh
          echo "echo DEFAULT_VOLUME_GROUP_NAME=stack-volumes-default >> local.conf" >> /opt/stack/start.sh
          echo "echo enable_service s-proxy s-object s-container s-account >> local.conf" >> /opt/stack/start.sh
          echo "echo SWIFT_HASH=66a3d6b56c1f479c8b4e70ab5c2000f5 >> local.conf" >> /opt/stack/start.sh
          echo "echo SWIFT_REPLICAS=1 >> local.conf" >> /opt/stack/start.sh
          echo "echo SWIFT_DATA_DIR=$DEST/data >> local.conf" >> /opt/stack/start.sh
          echo "echo SWIFT_LOOPBACK_DISK_SIZE_DEFAULT=2G >> local.conf" >> /opt/stack/start.sh
          echo "echo enable_service ceilometer-acompute ceilometer-acentral ceilometer-anotification ceilometer-collector ceilometer-alarm-evaluator, ceilometer-alarm-notifier ceilometer-api >> local.conf" >> /opt/stack/start.sh
          echo "echo disable_service q-lbaas >> local.conf" >> /opt/stack/start.sh
          echo "echo enable_service placement-api placement-client >> local.conf" >> /opt/stack/start.sh
          echo "echo CINDER_LVM_TYPE=thin >> local.conf" >> /opt/stack/start.sh
          echo "echo CINDER_VOLUME_CLEAR=none >> local.conf" >> /opt/stack/start.sh
          echo "echo disable_service n-net >> local.conf" >> /opt/stack/start.sh
          echo "./stack.sh" >> /opt/stack/start.sh
          chmod 0755 /opt/stack/start.sh
          su -l stack /opt/stack/start.sh

  server1_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: private_net_id }
      fixed_ips:
        - subnet_id: { get_param: private_subnet_id }
      security_groups: [{ get_resource: server_security_group }]

  volume_0:
    properties:
      image:
        get_param: volume_0_image
      metadata:
        attached_mode: rw
        readonly: 'False'
      name: HOT-Validator-vol
      size: 5
      volume_type:
        get_param: volume_0_volume_type
    type: OS::Cinder::Volume

  server_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Add security group rules for server
      name: security-group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 443
          port_range_max: 443
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp